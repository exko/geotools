/*
 *    Geotools - OpenSource mapping toolkit
 *    (C) 2002, Centre for Computational Geography
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */


package org.geotools.demos;

import java.net.URL;
import java.awt.Rectangle;
import java.io.File;
import java.io.IOException;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.geotools.data.DataSource;
import org.geotools.data.DataSourceException;
import org.geotools.gml.GMLDataSource;
import org.geotools.gui.swing.MapPane2;
import org.geotools.gui.tools.PanTool;
import org.geotools.gui.tools.Tool;
import org.geotools.map.BoundingBox;
import org.geotools.map.BoundingBoxImpl;
import org.geotools.map.Context;
import org.geotools.map.ContextImpl;
import org.geotools.map.DefaultLayer;
import org.geotools.map.DefaultLayerList;
import org.geotools.map.Layer;
import org.geotools.map.LayerList;
import org.geotools.styling.SLDStyle;
import org.geotools.styling.Style;
import org.geotools.styling.StyleFactory;

/**
 * A demonstration of a Map Viewer which uses geotools2.
 *
 * @author Cameron Shorter
 * @version $Id: MapViewer2.java,v 1.4 2002/12/31 03:45:54 camerons Exp $
 *
 */

public class MapViewer2 extends javax.swing.JFrame {

    /**
     * The class used for identifying for logging.
     */
    private static final Logger LOGGER = Logger.getLogger("org.geotools.demos");

    /** Creates new form MapViewer2 */
    public MapViewer2() {
        LOGGER.info("mapViewer graphics="+this.getGraphics());
        initComponents();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }//GEN-END:initComponents

    /** 
     * Extra initialisation.
     */
    private void initComponents2() {
        BoundingBox bbox = new BoundingBoxImpl(null,null);
        LayerList layerList = new DefaultLayerList();
        try {
            DataSource datasource = new GMLDataSource(
                ClassLoader.getSystemResource("org/geotools/demos/simple.gml"));
            StyleFactory styleFactory=StyleFactory.createStyleFactory();
            SLDStyle sldStyle = new SLDStyle(
                styleFactory,
                ClassLoader.getSystemResource("org/geotools/demos/simple.sld"));
            Style style=sldStyle.readXML();
            Layer layer=new DefaultLayer(datasource,style);
            layer.setTitle("funky layer");
            layerList.addLayer(layer);
            Context context=new ContextImpl(
                bbox,
                layerList,
                null,
                null,
                null,
                null);
            Tool tool=new PanTool();
            MapPane2 mapPane = new MapPane2(tool, context);
        } catch (Exception e){
            LOGGER.warning("Exception: "+e+".  Unable to load GML.");
        }
        mapPane.setWidgetSize(new Rectangle(300,300));

        mapPane.setBorder(new javax.swing.border.TitledBorder("MapPane Map"));
        getContentPane().add(mapPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 420));
        //mapPane.setSize(400,400);
        pack();
    }

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new MapViewer2().show();
    }

    private MapPane2 mapPane;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
