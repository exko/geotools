/* Copyright (c) 2001 Vision for New York - www.vfny.org.  All rights reserved.
 * This code is released under the Apache license, availible at the root GML4j directory.
 */
package org.geotools.gml;

import java.util.*;

import org.xml.sax.*;
import org.xml.sax.helpers.*;

import com.vividsolutions.jts.geom.*;


/**
 * LEVEL2 saxGML4j GML filter: translates coordinates into OGC simple types.
 *
 * <p>This filter simply seperates and passes GML events to a GMLGeometryFilter.  The main
 * simplification that it performs is to pass along coordinates as an abstracted CoordType,
 * regardless of their notation in the GML (Coord vs. Coordinates).</p>
 * 
 * @author Rob Hranac, Vision for New York
 * @version alpha, 12/01/01
 *
 */
public class GMLFilterGeometry extends XMLFilterImpl implements GMLHandlerGeometry {


		/** Handler for the JTS elements generated by this filter */
		private GMLHandlerJTS parent;  

		/** Handler for the JTS elements generated by this filter */
		GeometryFactory geometryFactory = new GeometryFactory();

		/** Handler for the JTS elements generated by this filter */
		SubHandlerFactory handlerFactory = new SubHandlerFactory();

		/** Handler for the JTS elements generated by this filter */
		SubHandler currentHandler;


		/**
		 * Constructor with parent.
		 */
		public GMLFilterGeometry (GMLHandlerJTS parent) {
				super(parent);
				this.parent = parent;
		}


		/**
		 * Sets content handler and passes along start warning.
		 */
		public void geometryStart(String localName, Attributes atts)
				throws SAXException {

				for( int i = 0; i < atts.getLength() ; i++ ) {
						//getName(i);
				}

				if( currentHandler == null ) { currentHandler = handlerFactory.create(localName); }
				else                         { currentHandler.subGeometry(localName, currentHandler.GEOMETRY_START); }

						
		}


		/**
		 * Sets content handler and passes along start warning.
		 */
		public void geometryEnd(String localName)
				throws SAXException {

 				if( currentHandler.isComplete(localName) ) { 
						parent.geometry( currentHandler.create(geometryFactory) );
						currentHandler = null;
				}
				else { 
						currentHandler.subGeometry(localName, currentHandler.GEOMETRY_END);
				}

		}


		/**
		 * Sets content handler and passes along start warning.
		 */
		public void geometrySub(String localName)
				throws SAXException {

				currentHandler.subGeometry(localName, currentHandler.GEOMETRY_SUB);
		}


		/**
		 * Sets content handler and passes along start warning.
		 */
		public void gmlCoordinates( double x, double y )
				throws SAXException {

				currentHandler.addCoordinate( new Coordinate(x, y) );

		}


		/**
		 * Sets content handler and passes along start warning.
		 */
		public void gmlCoordinates( double x, double y, double z )
				throws SAXException {

				currentHandler.addCoordinate( new Coordinate(x, y, z) );

		}



}
