<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/css"
href="file:/home/cameron/work/geotools2/extbin/gtbuild/xxe/css/docbook41.css"
?>
<!DOCTYPE article PUBLIC "-//Norman Walsh//DTD Simplified DocBook XML V4.1.2.4//EN"
"file:/home/cameron/work/geotools2/extbin/gtbuild/xxe/dtd/sdocbook/sdocbook.dtd">
<article
id="index"
><articleinfo
><title
>Geotools2 Software Design Description</title
><author
><firstname
>Cameron</firstname
><surname
>Shorter</surname
></author
><date
>$Date: 2002/10/18 10:35:54 $</date
><abstract
><para
>Software Design Description of Geotools2.</para
></abstract
></articleinfo
><section
><title
id="scope"
>Scope.</title
><section
><title
id="identification"
>Identification.</title
><para
>This document describes the design of <ulink
url="http://geotools.org"
>Geotools2</ulink
>.</para
></section
><section
><title
id="systemoverview"
>System overview.</title
><para
>Geotools 2 is an open source, java GIS toolkit for developing standards compliant solutions. It&#39;s modular architecture allows extra functionality to be easily incorporated. Geotools 2 aims to support Open GIS and other relevant standards as they are developed.</para
><para
>GeoTools 2 code is built using the latest Java tools and environments (Java 1.4.1 at time of writing) and will continue to leverage the capabilites of future Java environments and offical extentions as and when the technologies are released and have been through the first maintenance cycle (i.e. version 1.x.1).</para
><para
>The GeoTools2 project is divided into separate modules, each of which implements a specific requirement. Only a subset of these modules is usually required to build an application based on Geotools2.</para
></section
><section
><title
id="documentoverview"
>Document overview.</title
><para
>This Software Design Document is based on the <ulink
url="http://www.pogner.demon.co.uk/mil_498/sdd-did.htm"
>MIL-STD 498 Software Design Description Data Item Description (SDD DID)</ulink
>. MIL-STD 498 specifies a software development framework and the SDD DID specifies the heading structure and content for each section.</para
></section
></section
><section
><title
id="referencedocuments"
>Reference documents.</title
><para
>To Do:</para
></section
><section
><title
id="designdecisions"
>Geotools2 wide design decisions.</title
><section
><title
>Geotools2 in Context</title
><figure
><title
>Geotools2 in Context</title
><mediaobject
><imageobject
><imagedata
fileref="images/design/context.png"
></imagedata
></imageobject
></mediaobject
><blockquote
><para
>Geotools2 and the systems it interacts with.</para
></blockquote
></figure
><itemizedlist
><title
>Systems Geotools2 interacts with</title
><listitem
><para
>Applications are geographic applications which use geotools2 primatives.  They are generally end products like Map Viewers, Web Map Servers and so on.</para
></listitem
><listitem
><para
>GeoInterfaces contains interfaces for all the key geographic primatives like a Feature, Extent, Data Source and so on.  Geotools2 key purpose is to provide implementations for some of the these interfaces.</para
><para
>Not all interfaces are implemented, some functionality is imported from external vendors.  For instance, Geotools2 uses the Java Topology Suite (JTS) to store core geographic primatives.</para
><para
>At the time of writing (October 10, 2002), the GeoInterfaces project was still at the proposal stage.</para
></listitem
><listitem
><para
>Data is the geographic data that geotools2 manipulates.  These may be in a database, ESRI shapefile or some other format.</para
></listitem
><listitem
><para
>Geographic Objects are the core geographic primatives provided by the Java Topology Suite (JTS).</para
></listitem
></itemizedlist
></section
><section
><title
>to do</title
><itemizedlist
><listitem
><para
>Implementing Open GIS Standards. Many of the modules implement specific OGC specifications.</para
></listitem
><listitem
><para
>Open Source, so not using any proprietory libraries.</para
></listitem
><listitem
><para
>Not providing an end application, but rather a factoring common libraries into on location in order to provide tools to produce many different libraries.</para
></listitem
><listitem
><para
>Modular design. Easy to incorporate extra functionality. Easy to plug into existing applications. Common set of infrastructure for multiple projects.</para
></listitem
><listitem
><para
>Interfaces kept in the core module.</para
></listitem
><listitem
><para
>Update the status of the GeoInterfaces project.</para
></listitem
></itemizedlist
></section
></section
><section
><title
id="architecturaldesign"
>Geotools2 architectural design.</title
><section
><title
id="geotoolscomponents"
>Geotools2 components.</title
><section
><title
id="modulesoverview"
>Modules overview</title
><para
>to do:</para
><itemizedlist
><listitem
><para
>explain the reasoning behind having a core/defaultcore implimentation.</para
></listitem
><listitem
><para
>expand the module sections to explain each module&#39;s design.</para
></listitem
></itemizedlist
><para
>The GeoTools2 (GT2) project is divided into a number of separate module, each of which implements a specific requirement. Only a subset of these modules is usually required to build an application based on GT2.</para
><figure
id="figureoverview"
><title
>Geotools2 modules</title
><mediaobject
><imageobject
><imagedata
fileref="images/design/overview.png"
></imagedata
></imageobject
></mediaobject
><blockquote
><para
>The hierarchy of the Geotools2 internal modules.</para
></blockquote
></figure
><itemizedlist
><title
>Geotools modules</title
><listitem
><para
>core: At the hart of GT2 is the core module, this module contains no implementation code, just Java interfaces for all the key modules.</para
></listitem
><listitem
><para
>defaultcore: The next important module is the defaultcore which provides an implementation of the key interfaces found in the core module with the exception of datasource and rendering. The defaultcore module contains code which uses the latest version of Java (1.4) though it is envisioned that alternative implementations of core could be made in future, perhaps to target J2ME.</para
><para
>The datasource and rendering interfaces are not implemented by the defaultcore module as there will need to be multiple implementations available so implementation is left to other modules. Note that although the defaultcore module includes a full set of objects for representing the SLD and Filter specification there is no code in these modules for reading or writing such documents, instead an entirely programmatic approach is assumed with IO for such specifications being left to other modules.</para
></listitem
><listitem
><para
>Rendering: The rendering modules are responsible for rendering geographic data.</para
></listitem
><listitem
><para
>Transforms: These modules manipulate geographic data.</para
></listitem
><listitem
><para
>DataSources: These modules read native geographic data formats and convert it to a format usable by geotools2.</para
></listitem
></itemizedlist
><para
>JavaDoc API for modules can be found at: modules.geotools.org/core.</para
><para
><link
linkend="geotoolsdetaileddesign"
>Detailed Design</link
> contains more information about the modules.</para
></section
></section
><section
><title
id="conceptofexecution"
>Concept of execution.</title
><itemizedlist
><listitem
><para
>Sequence Diagrams/Collaberation Diagrams showing the relationships between modules.</para
></listitem
></itemizedlist
></section
><section
><title
id="interfacedesign"
>Interface design.</title
><para
></para
><section
><title
id="interfaceidentificationanddiagrams"
>Interface identification and diagrams.</title
><para
></para
></section
><section
><title
>Module XXX</title
><para
></para
></section
><section
><title
>Module YYY</title
><para
></para
></section
></section
></section
><section
><title
id="geotoolsdetaileddesign"
>Geotools2 detailed design.</title
><section
><title
>todo</title
><para
>The 5.x sections need to be filled out with more detail.</para
></section
><section
><title
id="modulecore"
>core</title
><para
>At the hart of GT2 is the core module, this module contains no implementation code, just Java interfaces for all the key modules.</para
></section
><section
><title
id="moduledefaultcore"
>defaultcore</title
><para
>Defaultcore provides an implementation of the key interfaces found in the core module with the exception of datasource and rendering. The defaultcore module contains code which uses the latest version of Java (1.4) though it is envisioned that alternative implementations of core could be made in future, perhaps to target J2ME.</para
><para
>The datasource and rendering interfaces are not implemented by the defaultcore module as there will need to be multiple implementations available so implementation is left to other modules. Note that although the defaultcore module includes a full set of objects for representing the SLD and Filter specification there is no code in these modules for reading or writing such documents, instead an entirely programmatic approach is assumed with IO for such specifications being left to other modules.</para
></section
><section
><title
id="modulesldstyling"
>sldstyling</title
><para
>An IO module which can read and write SLD XML documents by converting to and from the style objects implemented in defaultcore.</para
></section
><section
><title
id="modulefilter"
>filter</title
><para
>An IO module which can read and write Filter Encoding XML documents by converting to and from the filter objects implemented in defaultcore.</para
></section
><section
><title
id="modulepostgis"
>postgis</title
><para
>A datasource implementation for pulling spatial and attribute data from a PostGIS database. (taking advantage of the spatial capabilities of PostGIS).</para
></section
><section
><title
id="modulemysql"
>mysql</title
><para
>A datasource implementation for pulling spatial and attribute data from a MySQL database. (working around the lack of spatial capability in MySQL).</para
></section
><section
><title
id="modulegmldatasource"
>gmldatasource</title
><para
>A datasource implementation which can parse GML 2 encoded information.</para
></section
><section
><title
id="modulemapinfo"
>mapinfo</title
><para
>A datasource implementation which can read MIF/MID files.</para
></section
><section
><title
id="moduleshapefile"
>shapefile</title
><para
>A datasource implementation which can read Shapefiles.</para
></section
><section
><title
id="modulejava2drenderer"
>java2drenderer</title
><para
>java2drenderer - an implementation of the rendering interface which uses the Java2D API.</para
></section
><section
><title
id="modulesvgsupport"
>svgsupport</title
><para
>A module which extends the java2drenderer so that SVG files can be created.</para
></section
><section
><title
id="modulects-coordtrans"
>cts-coordtrans</title
><para
>cts-coordtrans - an implementation of the Coordinate Transformation specifications.</para
></section
><section
><title
id="modulegcs-coverage"
>gcs-coverage</title
><para
>gcs-coverage - an implementation of the Grid Coverages specification.</para
></section
><section
><title
id="modulegui"
>gui</title
><para
>gui - a suite of visual components for navigating and displaying maps produced by a renderer (e.g. the java2drenderer).</para
></section
><section
><title
id="modulealgorithms"
>algorithms</title
><para
>A suite of algorithms for analyzing and manipulating geographic objects.</para
></section
><section
><title
id="modulewmsserver"
>wmsserver</title
><para
>An implementation of the OGC WMS spec, including support for SLD.</para
><para
>A WFS has been implemented as a separate project using the GT2 codebase and it envisioned that the wmsserver module will soon be extracted and become part of a separate project which still using the GT2 as a base.</para
></section
></section
><section
><title
id="detaileddesign"
>Geotools2 detailed design.</title
><section
><title
>Module XXX.</title
><para
></para
></section
><section
><title
>Module YYY.</title
><para
></para
></section
></section
><section
><title
id="requirementstraceability"
>Requirements traceability.</title
><para
>Since this is an open source project, without a commercial contract to be satisfied, there are no requirements to trace to. Hence, this section is not addressed.</para
></section
><section
><title
id="notes"
>Notes.</title
><para
>This section deliberately left blank.</para
></section
></article
>
