<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD Simplified DocBook XML V4.1.2.5//EN"
"http://www.oasis-open.org/docbook/xml/simple/4.1.2.5/sdocbook.dtd">
<section>
  <title id="architecturaldesign">A sample project built using Maven</title>

  <section>
    <title id="maven">Maven</title>

    <para>Maven is a Java project management and project comprehension tool,
    to follow this guide you will need to download and install Maven 1.0 -
    beta 8.</para>

    <para>You can find more details and find the latest download at:</para>

    <para><ulink url="http://jakarta.apache.org/turbine/maven/">http://jakarta.apache.org/turbine/maven/</ulink></para>

    <section>
      <title id="modulesoverview">Setting up the project directories</title>

      <para>Maven now comes with the ability to automaticlay, to use this
      create a new directory in which you want to develop your application and
      then type: </para>

      <para><command>maven genapp -Dpackage=org.test.myprog</command></para>

      <para>Replace the org.test.myprog bit with your own package structure,
      providing maven is installed correctly you should now have a directory
      structure which looks something like this:</para>

      <para></para>

      <itemizedlist>
        <listitem>
          <para>project.properties</para>
        </listitem>

        <listitem>
          <para>project.xml</para>
        </listitem>

        <listitem>
          <para>src</para>

          <itemizedlist>
            <listitem>
              <para>java</para>

              <itemizedlist>
                <listitem>
                  <para>org</para>

                  <para>....</para>
                </listitem>
              </itemizedlist>
            </listitem>

            <listitem>
              <para>test</para>

              <para></para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para>The maven build process is controled by the contents of the
      project.xml and the project.properties file, in order to build a project
      which uses GT2 you will need to make some additions to both.</para>

      <section>
        <title>The project.properties file</title>

        <para>This file controls aspects of the maven build and web site
        generation process, by default it looks like this:</para>

        <para><computeroutput>maven.xdoc.date=left
        maven.xdoc.version=${pom.currentVersion}</computeroutput></para>

        <para>In order to let maven know where to fetch the GeoTools 2 jars
        and support libraries from you will need to add the following line:</para>

        <para><computeroutput>maven.repo.remote=http://www.ibiblio.org/maven/,http://www.geotools.org/gt2modules/extbin,http://www.geotools.org/gt2</computeroutput></para>

        <para>Maven will check these three web locations in turn when it is
        trying to locate jars. The first - ibiblio - is the standard maven
        repository, the second - gt2modules/extbin - contains 3rd party jars
        used by GeoTools2 whilst the third - gt2 - contains binary
        distribution of GeoTools2.</para>
      </section>

      <section>
        <title>The project.xml file</title>

        <para>The project.xml file contains a lot of information about your
        project, you can use it to provide information on developers, mailing
        lists, versions and much more, for full details see the maven web
        site. </para>

        <para>The genapp goal sets some defaults and provides some examples,
        feel free to change these to values more apropriate to your project.</para>

        <para>However, one of the most important tasks of the project.xml file
        is to specify your projects dependancies, by default none are
        specified so you will find an entry which looks like this:</para>

        <para><computeroutput>&#60;dependencies/&#62;</computeroutput></para>

        <para>You will need to add an entry here for each GeoTools 2 module
        that you want to use as well as any 3rd party jars GT2 or your project
        may need.</para>

        <para>To include the core module from GT2 the dependanies block would
        look like this: <computeroutput>&#60;dependencies&#62;
        &#60;dependency&#62; &#60;artifactId&#62;core&#60;/artifactId&#62;
        &#60;groupId&#62;gt2&#60;/groupId&#62;
        &#60;version&#62;SNAPSHOT&#60;/version&#62; &#60;/dependency&#62;
        &#60;/dependencies&#62;</computeroutput></para>

        <para>The SNAPSHOT version tag tells maven to go and grab the latest
        copy of the jar, it will download a new copy if and only if there has
        been an update.</para>

        <para>You will need an entry like this for each module from GeoTools 2
        that you use, in order to help you work out what the cross module and
        3rd parth dependancies are you will need to look at the dependancy
        page for the module that you are interested in. For example, if you
        are interested in using the gmldatasource module take a look at:
        <ulink
        url="http://modules.geotools.org/gmldatasource/dependencies.html">http://modules.geotools.org/gmldatasource/dependencies.html</ulink></para>

        <para>Over time, as maven develops, the process will become easier as
        automatic dependany discovery becomes possible.</para>
      </section>
    </section>

    <section>
      <title>Building your project</title>

      <para>For full details on how to build a project using maven you should
      refere to the main maven site, however all you should need to do is
      type:</para>

      <para>maven java:compile</para>

      <para>And maven will download the required parts of GeoTools2 and
      compile your code into a directory named &#39;target&#39;</para>

      <para>You may also want to try some of the following maven commands:
      </para>

      <para><computeroutput>maven site</computeroutput></para>

      <para><computeroutput>maven javadoc</computeroutput></para>

      <para><computeroutput>maven jar</computeroutput></para>

      <para><computeroutput>maven -g</computeroutput></para>
    </section>
  </section>
</section>