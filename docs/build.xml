<project name="docs" default="build"> 

  <target name="build">
    <property environment="env"/>
    <condition property="sphinx.available">
      <or>
        <available file="sphinx-build" filepath="${env.PATH}"/>
        <available file="sphinx-build.exe" filepath="${env.Path}"/>
        <available file="sphinx-build.exe" filepath="${env.PATH}"/>
      </or>
    </condition>
    
    <antcall target="sphinx">
      <param name="id" value="user"/>
      <param name="build" value="html"/>
    </antcall>
    <antcall target="sphinx">
      <param name="id" value="web"/>
      <param name="build" value="html"/>
    </antcall>
    <antcall target="sphinx">
      <param name="id" value="index"/>
      <param name="build" value="html"/>
    </antcall>
    <!--antcall target="sphinx">
      <param name="id" value="tutorial"/>
      <param name="build" value="html"/>
    </antcall-->
    <!-- uncomment for pdf -->
    <!--antcall target="sphinx">
      <param name="id" value="tutorial"/>
      <param name="build" value="latex"/>
    </antcall-->
    <!--antcall target="sphinx">
      <param name="id" value="tutorial"/>
      <param name="build" value="pdf"/>
    </antcall-->
  </target>

  <target name="sphinx" if="sphinx.available">
    <exec executable="sphinx-build" failonerror="true" dir="${basedir}/${id}">
      <arg line="-D release=${project.version} -a -E -b ${build} -d &quot;${build.directory}/${id}/doctrees&quot; . &quot;${build.directory}/${id}/${build}&quot;"/>
    </exec>
  </target>

</project>
