package org.geotools.jdbc;

import java.io.IOException;
import java.math.BigInteger;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * Represents a column of a primary key which is not auto incrementing.
 * <p>
 * If the type of the column is integral, new values are generated by selecting
 * the max value of the key and adding 1 to it. If the column is character based
 * a random string is generated.
 * </p>
 * @author Justin Deoliveira, OpenGEO
 *
 */
public class NonIncrementingPrimaryKeyColumn extends PrimaryKeyColumn {

    public NonIncrementingPrimaryKeyColumn(String name, Class type) {
        super(name, type);
    }
//    
//    @Override
//    public Object generate(Connection cx, SQLDialect dialect)
//            throws SQLException, IOException {
//
//        Class t = getType();
//        
//        //is the column numeric?
//        if ( Number.class.isAssignableFrom( t ) ) {
//            //is the column integral? 
//            if ( t == Short.class || t == Integer.class || t == Long.class 
//                || BigInteger.class.isAssignableFrom( t ) ) {
//                
//                StringBuffer sql = new StringBuffer();
//                sql.append( "SELECT MAX(");
//                dialect.encodeColumnName( getName() , sql );
//                sql.append( ") + 1 FROM ");
//                dialect.encodeTableName( getPrimaryKey().getTableName(), sql);
//                
//                Statement st = cx.createStatement();
//                try {
//                    
//                }
//                finally {
//                    
//                }
//            }
//        }
//        else if ( CharSequence.class.isAssignableFrom( t ) ) {
//            
//        }
//        
//        throw new IOException( "Cannot generate key value for column of type: " + t.getName() );
//        
//    }

}
